#spring.datasource.url = jdbc:mysql://192.168.254.131:3306/employees?useSSL=true&serverTimezone=UTC
#spring.datasource.username = testuser
#spring.datasource.password = 19811981
#spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

#logging.level.org.mybatis=TRACE
#logging.level.com.empserver=TRACE

#app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
#app.auth.tokenExpirationMsec=864000000
#app.auth.tokenExpirationMsec=35000

spring:
  profiles:
    active: development
#  datasource:
#    url: jdbc:mysql://192.168.254.131:3306/employees?useSSL=true&serverTimezone=UTC
#    username: testuser
#    password: 19811981
#    driver-class-name: com.mysql.cj.jdbc.Driver
  application:
    name: EmployeesServer

logging:
  level:
    org:
      mybatis: TRACE
      springframework:
        transaction: trace
        jpa: debug
    com:
      empserver: TRACE
    io:
      github:
        resilience4j: TRACE

  #file: ${spring.application.name}.log
  file:
    name: empserver.log


app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  write:
    datasource:
      jdbc-url: jdbc:mysql://localhost:3306/employees?useSSL=true&serverTimezone=UTC
      username: root
      password: 19811981
      driver-class-name: com.mysql.cj.jdbc.Driver
  read:
    datasource:
      jdbc-url: jdbc:mysql://localhost:3306/employees?useSSL=true&serverTimezone=UTC
      username: root
      password: 19811981
      driver-class-name: com.mysql.cj.jdbc.Driver

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 10
      ringBufferSizeInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 2s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      ignoreExceptions:
        - com.empserver.exceptions.BusinessException
    shared:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 100
      ringBufferSizeInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      ignoreExceptions:
        - com.empserver.exceptions.BusinessException
  instances:
    backendA:
      baseConifg: default
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 10
      recordFailurePredicate: com.empserver.resilience4jdemo.exceptions.RecordFailurePredicate

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100
  instances:
    backendA:
      maxConcurrentCalls: 10
    backendB:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2
  instances:
    backendA:
      baseConfig: default
    backendB:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 2
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
#      ignoreExceptions:
#        - io.github.robwin.exception.BusinessException
  instances:
    backendA:
      maxRetryAttempts: 3
    backendB:
      maxRetryAttempts: 3

resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: false
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      eventConsumerBufferSize: 100
  instances:
    backendA:
      baseConfig: default
    backendC:
      limitForPeriod: 600
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s
---
spring:
  profiles:
    include: with-security


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS